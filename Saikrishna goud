# Find  outputs  (Home  work)
for  i   in   range(1 , 8):
	print(i)
	if  i % 3  == 0:
			continue
	else:
			print('Sec')
	print('Hello')
# End of loop
print('Outside loop')

# output
1
Sec
Hello
2
Sec
Hello
3
4
Sec
Hello
5
Sec
Hello
6
7
Sec
Hello
Outside loop

# Identify Error  (Home  work)
if ():
	print('Hyd')
	continue                                                                 # â€˜continue' not properly in loop
	print('Sec')

# Find outputs (Home  work)
for  i   in   range(1 , 8):
	print(i)
	if   i % 3 == 0:
		break
	else:
		print('Sec')
	print('Hello')
# End  of  the  loop
print('Outside loop')
# output
1
Sec
Hello
2
Sec
Hello
3
Outside loop

# Identify Error  (Home  work)
if(10 , 20 , 30):
	print('Hyd')
	break                                                                                           # Break outside loop
	print('Sec') 

# Find ) outputs  (Home  work
for  i   in   range(1 , 8):
	print(i)
	if   i % 3 == 0:
		pass
		print('Hyd')
	else:
		print('Sec')
	print('Hello')
# End  of  the  loop
print('Outside loop')
# output
1
Sec
Hello
2
Sec
Hello
3
Hyd
Hello
4
Sec
Hello
5
Sec
Hello
6
Hyd
Hello
7
Sec
Hello
Outside loop

# Find  outputs  (Home  work)
for  i   in   range(1 , 8):
	print(i)
	if   i % 3 == 0:
		exit()
	else:
		print('Sec')
	print('Hello')
# End  of  the  loop
print('Outside loop')

# output
1
Sec
Hello
2
Sec
Hello
3

# Find  outputs  (Home  work)
for  i  in  range(1 , 8):
	print(i)
	if   i % 3 == 0:
		continue
	else:
		print('Sec')
	print('Hello')
else:
	print('else  suite')
# End  of  the  loop
print('Outside  loop')

# output
1
Sec
Hello
2
Sec
Hello
3
4
Sec
Hello
5
Sec
Hello
6
7
Sec
Hello
else  suite
Outside  loop

# Find  outputs  (Home  work)
for  i  in  range(1 , 8):
	print(i)
	if  i % 3 == 0:
		break
	else:
		print('Sec')
	print('Hello')
else:
	print('else  suite')
#End   of  the  loop
print('Outside  loop')	

# output
1
Sec
Hello
2
Sec
Hello
3
Outside  loop

# Find  outputs  (Home  work)
for  i  in  range(1 , 8):
	print(i)
	if  i == 8:
		break
	else:
		print('Sec')
	print('Hello')
else:
	print('else  suite')
# End  of  the  loop
print('Outside loop')

# output
1
Sec
Hello
2
Sec
Hello
3
Sec
Hello
4
Sec
Hello
5
Sec
Hello
6
Sec
Hello
7
Sec
Hello
else  suite
Outside loop

# Input: list and element to be searched
lst = eval(input("Enter any list: "))
x = eval(input("Enter the element to be searched: "))

found = False  # Flag to check if element is found
for index in range(len(lst)):
    if lst[index] == x:
        print("Found at index:", index)
        found = True
        break  # Stop searching once found
if not found:
    print("Not Found")

# output
Enter any list: [10, 20, 15, 12, 18]
Enter the element to be searched: 15
Found at index: 2
Enter any list: [10, 20, 15, 12, 18]
Enter the element to be searched: 19
Not Found
Enter any list: [25, 10.8, 'Hyd', True]
Enter the element to be searched: 3+4j
Not Found

# Input: list and element to search
lst = [10, 20, 15, 12, 18, 15, 19, 14, 15, 14]
x = 15  # Element to search for

count = 0  # To count how many times x is found
for index in range(len(lst)):
    if lst[index] == x:
        print(f"{x} is found at index {index}")
        count += 1
if count > 0:
    print(f"{x} is found {count} times")
else:
    print(f"{x} is not found")
# output
15 is found at index 2
15 is found at index 5
15 is found at index 8
15 is found 3 times

#  Walrus   operator (:=)  demo  program
print(a := 25)                                                                        # 25
#print(a = 25)                                                                         # Error
print(a)                                                                                # 25
print(a := 6 + 7)                                                                         # 13
print(a)                                                                                       # 13
print((a := 6) + 7)                                                                       # 13
print(a)                                                                                       # 6
#print((a = 6) + 7)

# Find  outputs  (Home  work)
a = 0
if  a == 0:
	print('Hyd')                                                                   # Hyd
else:
	print('Sec')                                                                       # Sec :  0
if  b := 0:
	print('Hyd')                                                                         # Hyd 
else:
	print('Sec : ' , b)                                                                   # Sec
#if  c = 0:
	print('Hyd')
#else:
	print('Sec')

#Write a program to determine average of inputs which are terminated with ctrl + z (without walrus operator) 
total = 0
count = 0

print("Enter values one by one. Press Ctrl+Z (Windows) or Ctrl+D (Unix) to stop:")

try:
    while True:
        value = input()
        total += eval(value)  # Safely assumes input is a valid Python literal
        count += 1
except EOFError:
    pass  # Reached end of input

if count > 0:
    average = total / count
    print("Average =", average)
else:
    print("No inputs provided.")

# Output
Average : 30.214285714285715
#  del  operator  demo program  (Home  work)
a = 25
print(a)                                                                           # 25
del   a
#print(a)                                                                        # Error

# Find  outputs  (Home  work)
a = b = c = 25
print(a , b , c)                                                           #  25 25 25
del   a
print(b , c)                                                               #  25 25
#print(a)
del   b
print(c)                                                                 # 25
#print(b)
#del   c
print(c)                                                             # 25

#  Can  multiple  objects  be  deleted  with  same  del  operator ?
a , b , c = 25 , 10.8 , 'Hyd'
print(a , b , c)
del   a , b , c                                                                                  # 25 10.8 Hyd
#print(a)
#print(b)
#print(c)
# Find outputs  (Home  work)
a = [10 , 20 , 15 , 18]
print(a)
del  a[2]                                                           # 	[10, 20, 15, 18]
print(a)
del  a                                                                  # [10, 20, 18]
#print(a)
#print(a[0])

# Find outputs  (Home work)
a = (10 , 20 , 15 , 18)
print(a)                                                                                         # (10, 20, 15, 18)
print(a[0])                                                                                    # 10
#del  a[2]
del  a
#print(a)
#print(a[0])
