a=int(input('Enter the year : '))
if (a%4==0 and a%100!=0) or a%400==0:
    print('Leap year')
else:
    print('Not a Leap year')



a= int(input('Enter 1st number : '))
b= int(input('Enter 2nd number : '))
c= int(input('Enter 3rd number : '))
if a>b and a>c:
    print(a)
elif b>c:
    print(b)
else:
    print(c)



temp=int(input('Enter  1  to  convert  celsius  to  farenheit  and  2  to  convert  fahrenheit  to  celsius : '))
if temp==1:
    a=int(input('Enter  celsius  temperature :  '))
    ctof = 1.8 * a + 32
    print('Fahrenheit  Equivalent  : ',ctof)
elif temp==2:
    a=int(input('Enter  fahrenheit  temperature : '))
    ftoc = (a - 32) / 1.8
    print(f'celsius   equivalent : {ftoc:.2f}')
else:
    print('Invalid input')




x = int(input("Enter x-coordinate: "))
y = int(input("Enter y-coordinate: "))

if x > 0 and y > 0:
    print("Point lies in 1st Quadrant")
elif x < 0 and y > 0:
    print("Point lies in 2nd Quadrant")
elif x < 0 and y < 0:
    print("Point lies in 3rd Quadrant")
elif x > 0 and y < 0:
    print("Point lies in 4th Quadrant")
elif x != 0 and y == 0:
    print("Point lies on the X-axis")
elif x == 0 and y != 0:
    print("Point lies on the Y-axis")
elif x == 0 and y == 0:
    print("Point is at the Origin")




a=int(input('Enter  first  input : '))
b=int(input('Enter  second   input : '))
c=int(input('Enter  third  input : '))
max=a
min=a
if b>max:
    max = b
if c>max:
    max=c
if b<min:
    min=b
if c<min:
    min=c
mid=(a+b+c)-(max+min)
print('Largest number : ',max)
print('Smallest number : ',min)
print('Middle number : ',mid)




import math
a=float(input('Enter  first  input : '))
b=float(input('Enter  second   input : '))
c=float(input('Enter  third  input : '))
s=(a+b+c)/2
if a+b>c and b+c>a and c+a>b:
    print('It forms a triangle')
    if a==b and b==c:
        print("It is a equilateral  triangle")
        areaequi=(math.sqrt(3) / 4 * a ** 2)
        print(f'{areaequi:.2f})
    elif a==b or b==c or c==a:
        print('It is  a isosceles  triangle')
        perimeter=(a+b+c)
        print(perimeter)
    elif a!=b and b!=c and c!=a:
        print('It is a scalene  triangle')
        areascalene=(math.sqrt(s * (s - a) * (s - b) * (s - c)))
        perimeterscalene=a+b+c
        print(f'{areascalene:.2f}')
        print(perimeterscalene)
else:
    print('Not a triangle')





import math

a = float(input("Enter coefficient a (a â‰  0): "))
b = float(input("Enter coefficient b: "))
c = float(input("Enter coefficient c: "))

if a == 0:
    print("This is not a quadratic equation. 'a' should not be zero.")
else:
    disc = b**2 - 4 * a * c
    print(f"\nDiscriminant = {disc}")
    if disc > 0:
        root1 = (-b + math.sqrt(disc)) / (2 * a)
        root2 = (-b - math.sqrt(disc)) / (2 * a)
        print("Roots are Real and Distinct")
        print(f"Root 1 = {root1}")
        print(f"Root 2 = {root2}")

    elif disc == 0:
        root = -b / (2 * a)
        print("Roots are Real and Same")
        print(f"Root = {root}")

    else:
        real_part = -b / (2 * a)
        imag_part = math.sqrt(-disc) / (2 * a)
        root1 = complex(real_part, imag_part)
        root2 = complex(real_part, -imag_part)
        print("Roots are Complex or Imaginary")
        print(f"Root 1 = {root1}")
        print(f"Root 2 = {root2}")





import math

x = float(input("Enter x-coordinate of point: "))
y = float(input("Enter y-coordinate of point: "))
r = float(input("Enter radius of the circle: "))

distance = math.sqrt(x**2 + y**2)

print(f"\nDistance from origin = {distance:.2f}")
print(f"Radius of circle = {r}")

if distance < r:
    print("Point lies **inside** the circle.")
elif distance == r:
    print("Point lies **on** the circle.")
else:
    print("Point lies **outside** the circle.")



m = 4
match  m:
	case  1:
		print('One')
	case  2:
		print('Two')
	case  3:
		print('Three')
print('Bye') # Bye




# Identify  Error
i = 2
match  i:
	case  1:
		print('One')
	case  _: # should be only in last
		print('None of   the  above')
	case  2:
		print('Two')
print('Bye')




# Find  outputs  (Home  work)
m = 2
match  m:
	case  1:
		print('One')
	case  _: # Error
		print('Hello')
	case  _:
		print('Bye')
print('End')



m = 1
match  m:
	case  1:
		print('Hyd') # Hyd
	case  1:
		print('Sec')
	case  1:
		print('Cyb')
print('Bye') # Bye




ch = 'B'
match  ch:
	case   'A':
		print('Apple')
	case  'B':
		print('Book') # Book
	case  'C':
		print('Cafe')
	case  _:
		print('None of  the  above')
print('Bye') # Bye





'''
1) What  are  the  outputs  if  input  is  -6 ? ---> 
Hyd
Sec
Cyb
Bye

2) What  are  the  outputs  if  input  is  15  ?  --->
One
Two
Three
Bye
3) What  are  the  outputs  if  input  is  10.8  ?  --->
India
China
Usa
Bye
4) What  are  the  outputs  if  input  is  0  ?  --->
Hyd
Sec
Cyb
Bye
5) What  are  the  outputs  if  input  is  -10  ?  --->
One
Two
Three
Bye
6) What  are  the  outputs  if  input  is  7  ?  --->
Hyd
Sec
Cyb
Bye
'''
x = eval(input('Enter any  number :  '))
match  x:
	case  7 |  -6  |  0:
		print('Hyd')
		print('Sec')
		print('Cyb')
	case  -10 | 15:
		print('One')
		print('Two')
		print('Three')
	case  _:
		print('India')
		print('China')
		print('Usa')
# End  of  match
print('Bye')






'''
1) What  is  the  output  when  input  is  (-10 , -20) ?  --->Quadrant
2) What  is  the  output  when  input  is  (10 , 0) ?  --->x - axis
3) What  is  the  output  when  input  is  (0 , -20) ?  --->y - axis
4) What  is  the  output  when  input  is  (0 , 0) ?  --->Origin
5) What  is  the  output  when  input  is  (10 , 20 , 30) ?  --->Not  a  point
6) What  is  the  output  when  input  is  [10 , 20]  ?  --->Quadrant
7) What  is  the  output  when  input  is  [0 , -25]  ?  --->Not a point
8) What  is  the  output  when  input  is  ()  ?  --->Not a point
9) What  is  the  output  when  input  is  {10 , 20} ?  --->Not a point
10) What  is  the  output  when  input  is  (25,) ?  --->Not a point
11) What  is  the  output  when  input  is  {10 : 20} ?  --->Not a point
'''
tpl = eval(input('Enter  any  point  in  the  form  of  (x , y) :  '))
match  tpl:
	case  (0 , 0):
		print('Origin')
	case   (0 , y):
		print('y - axis')
	case   (x , 0):
		print('x - axis')
	case   (x , y):
		print('Quadrant')
	case  _:
		print('Not  a  point')




units = int(input("Enter units: "))

match units // 100:
    case 0:
        cost = units * 3.00

    case 1:
        cost = 100 * 3.00 + (units - 100) * 3.50

    case 2 | 3:
        cost = 100 * 3.00 + 100 * 3.50 + (units - 200) * 4.00

    case 4 | 5 | 6:
        cost = 100 * 3.00 + 100 * 3.50 + 200 * 4.00 + (units - 400) * 4.50

    case _:
        cost = (100 * 3.00 + 100 * 3.50 + 200 * 4.00 + 
                300 * 4.50 + (units - 700) * 5.00)

print(f"Bill amount for {units} units = Rs. {cost:.2f}")





x = int(input("Enter value of x: "))

print("Fibonacci Series")

a, b = 0, 1
while a <= x:
    print(a)
    a, b = b, a + b



while  True:
	print('Hello') # infinite loop
print('Bye')



#  Find  outputs
while  False:
	print('Hello')
print('Bye') # Bye




lst = [10, 20, 15, 18]
for item in lst:
    print(item) # 10
20
15
18

s = 'Hyd'
for ch in s:
    print(ch) # H
y
d


for num in range(5):
    print(num) # 0
1
2
3
4





for x in {10: 20, 30: 40, 50: 60}.keys():
    print(x) # 	10, 30, 50
for x in {10: 20, 30: 40, 50: 60}.values():
    print(x) #  20, 40, 60
for x in {10: 20, 30: 40, 50: 60}.items():
    print(x) #  (10, 20), (30, 40), (50, 60)
for x in {10: 20, 30: 40, 50: 60}:
    print(x) # 	10, 30, 50




a = {10: 20, 30: 40, 50: 60}
for x, y in a.items():
    print(x, y, sep='...') # 10...20
30...40
50...60

for  x ,  y  in   a:
	print(x , y # Error
for  x , y  in  {10 : 20 , 30 : 40 , 50 : 60}:
	print(x , y , sep = '...') # Error




for  x  in   123: # Error
        print(x)




for  x   in   ():
        print(x) # empty
for  x   in  []:
        print(x) # empty
for  x   in   {}:
        print(x) # empty
for  x   in   set():
        print(x) # empty
for  x   in   '':
        print(x) # empty
for  x  in  range(10 , 10):
	print(x) # empty
for  x  in   range():
	print(x) # Error
for  x  in   (25):
	print(x) # Error



#  Nested  Loop  demo  program
for  i  in  range(1 , 4):
	for  j  in  range(1 , 5):
			print(i ,  j)  #
	print('Hello')
print('Bye')

 output:
1 1
1 2
1 3
1 4
Hello
2 1
2 2
2 3
2 4
Hello
3 1
3 2
3 3
3 4
Hello
Bye



a = [25 , 10.8 , 'Hyd' , True]
print('Indexed based for loop')
for i in range(len(a)):
    print(f'Index {i} --> {a[i]}')
print('For each loop')
for t in enumerate(a):
    print(f'Index {t[0]} --> {t[1]}')



a = [25 , 10.8 , 'Hyd' , True]
print('Indexed for loop')
for i in range(len(a) - 1, -1, -1):
    print(a[i])

print('For each loop')
for item in reversed(a):
    print(item)





a = eval(input('Enter 1st list: '))
b = eval(input('Enter 2nd list: '))
c = []

for i in range(min(len(a), len(b))):
    c.append(a[i] + b[i])

print('3rd list using index-based loop:', c)


c = []
print('Using for-each loop with one variable:')
for t in zip(a, b):  # t is a tuple of (a[i], b[i])
    c.append(t[0] + t[1])

print('3rd list using for-each loop:', c)




print('Indexed for loop')
for i in range(2, 5):  # indexes 2, 3, 4
    print(a[i])
print('For-each loop without second variable and without slice')
for t in enumerate(a):
    if 2 <= t[0] <= 4:
        print(t[1])




a = [10 , 20 , 15 , 18]
for  i  in  range(len(a)):
	a[i] +=  1
print('a :  ' , a) # a :   [11, 21, 16, 19]
b = [10 , 20 , 15 , 18]
for  x  in   b:
	x += 1
print('b :  ' ,  b) # b :   [10, 20, 15, 18]


