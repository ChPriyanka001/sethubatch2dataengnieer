ASSIGNMENT 18-07-25
a = [25 , 10.8 , 'Hyd' , True , 3 + 4j , None , 'Hyd' , 25]
[25, 10.8, 'Hyd', True, (3+4j), None, 'Hyd', 25]
 print(a) 
[25, 10.8, 'Hyd', True, (3+4j), None, 'Hyd', 25]
print(*a)
only elements are printed 25 10.8 Hyd True (3+4j) None Hyd 25
 print(type(a)) 
<class 'list'>
print(id(a))
	Id of a is : 140304613267456
 print(len(a))
 length is 8
 a[2] = 'Sec'
 print(a) 
Before changing [25, 10.8, 'Hyd', True, (3+4j), None, 'Hyd', 25]
 After changing [25, 10.8, sec, True, (3+4j), None, 'Hyd', 25]
	Change element at 2nd index 
print(a[2 : 5])
sec , True , (3+4j) // output from 2 to 5 
a = [ ]
print(a)
[ ]
a . append(25)
[25]
a . append(10.8)
 [25 , 10.8]
a . append('Hyd')
 [25 , 10.8 , ‘HYD’]
a . append(True)
 [25 , 10.8, ‘HYD’, True]

print(a)
[25 , 10.8, ‘HYD’, True]
a . remove('Hyd')
[ 25 , 10.8,  True]
print(a)
a = [25 , 10.8 , True]
a . remove('25')
print(a)
ERROR // 25 is a  not a string in above list 
print(a)
 a = [25 , 10.8 , True]
print(id(a))
	 Id is   140553662739136 
print(a * 3)   :  [25 , 10.8 , True, 25 , 10.8 , True , 25 , 10.8 , True]
print(a * 2)   :  [ 25 , 10.8 , True , 25 , 10.8 , True ]
print(a * 1)   :  [ 25 , 10.8 , True]
print(a * 0)   : EMPTY list [ ]
print(a * -1)   : empty list [ ]
print(a * 4.0)  : // error  ,  not allowed  as float  m 
a = a * 3
print(a)
	[25 , 10.8 , True, 25 , 10.8 , True , 25 , 10.8 , True]
print(id(a))   : 140384293475328
a = [25]
print(a * a): not possible to multiply a list by list 
a = [ ]     //  all are empty list related 
print(type(a)) : <class 'list'>
print(a)   :  [ ]
print(len(a))  :  ‘ 0  ‘ because no elements are founded 
b = list()    :  [  ] 
print(b) :  0     &   print(len(b))   :  0
# Slice  demo  program (Home  work)
#        0      1          2         3         4        5        6        7
list = [25 , 10.8 , 3 + 4j , 'Hyd' , True , None , 10.8 , 'Hyd']
#       -8     -7       -6        -5         -4      -3       -2        -1
print(list[2 : 7])  
[3 + 4j , 'Hyd' , True , None , 10.8 ]
print(list[ : : ])
	list = [25 , 10.8 , 3 + 4j , 'Hyd' , True , None , 10.8 , 'Hyd']
#  list[0 :  8 :  1]  --->  List  from  indexes  0  to  7  in  steps  of  1  i.e.  [25 , 10.8 , 3 + 4j , 'Hyd' , True , None , 10.8 , 'Hyd']
print(list[ : : -1])
	['Hyd', 10.8, None, True, 'Hyd', (3+4j), 10.8, 25]
print(list[ : : 2])
      [25, (3+4j), True, 10.8]
print(list[1 : : 2])
	[10.8, 'Hyd', None, 'Hyd']
print(list[ : : -2]) #  list[-1 :  -9 : -2]  --->  List  from  indexes   -1  to  -8  in  steps  of   -2   i.e.  ['Hyd' , None , 'Hyd' , 10.8]
print(list[-2 : : -2])
	[10.8, True, (3+4j)]
print(list[1 : 4])
	[10.8, (3+4j), 'Hyd']
print(list[-4 : -1])
	[True, None, 10.8]
print(list[3 : -3])
	['Hyd', True] 
print(list[2 : -5])
	Empty lit
print(list[-1:-5])
	Empty list 

#  Find  outputs  (Home  work)
#     0     1     2    3     4
a = [10 , 20 , 30 , 40 , 50]
print(a , id(a))
	[10, 20, 30, 40, 50]    id :   
a[1 : 4] = [60 , 70]
print(a , id(a))  
	[10, 60, 70, 50]     // replacing in that place 
a[2: 4] = [100 , 200 ,  300]
print(a , id(a))
	[10, 60, 100, 200, 300] , id : 
#  Find  outputs  (Home  work)
#        0       1      2          3         4        5         6        7
list = [25 , 10.8 , 3+4j , 'Hyd' , True , None , 10.8 , 'Hyd']
x ,  y = list[3 : 5]
print('x : ' , x)   x: Hyd  
print('y : ' , y)   y: True
for  x  in  list[2:7]:
	print(x)
	[3+4j, 'Hyd', True, None, 10.8]    
 (3+4j)
	Hyd
	True
	None
	10.8
#  Find  outputs  (Home  work)
a =  [25]
print(a[1]) no value
print(a[1:])  no value
# Find  outputs  (Home  work)
a = (25)
print(type(a))     :   <class 'int'>
b = 25,
print(type(b))  :                <class  ‘tuple ‘> 
c = 25
print(type(c))   <class 'int'>
print(type(d))   :   <class  ‘tuple ‘>  
print(a * 4)       25*4 =100
print(b * 4)      (25,)*4=(25 , 25 ,25 ,25 ) 
print(c * 4)    25*4=100
print(d * 4)    (25,)*4  =(25 , 25 , 25 , 25)

# Find outputs (Home work) 
a = () print(type(a))
<class 'tuple'>
print(a)
	() empty tuple 
 print(len(a)) : 0 // no elements
b = tuple() 
print(b)  : () // empty tuple 
print(len(b)) :  0  no elements 
# Tricky program
# Find  outputs (Home  work)
a = (10 , 20 , 30)
print(a)
	(10 , 20 ,  30  )
print(id(a))    :  140548171502720  
a = a * 2
	( 10 , 20 ,  30 , 10 , 20 ,  30  )
print(a)
	( 10 , 20 ,  30 , 10 , 20 ,  30  )

print(id(a)):   140548171502992


#  set  object  demo  program  (Home  work)
a = {25 , 10.8 , 'Hyd' , True , 3+4j , None , 25 , 'Hyd'}
print(a)
	 {25 , 10.8 , 'Hyd' , True , 3+4j , None , 25 , 'Hyd'}

print(type(a)) 
        < class    ‘set’ >
print(len(a))    :  8
print(a[2])       : error 
print(a[1 : 4])  
	{25 ,  10.8,  ‘Hyd’ , True }
a[2] = 'Sec'
	Error , because 2nd index having  float type 
print(a * 2)      &     print(a * a)
	Set is Not support for set multiplication 
	
 # Tricky  program
# Find  outputs (Home  work)
a = {1 , 'Hyd' , False , True , 0.0 , '' , 1.0 ,  0}
print(a)
	{1 , 'Hyd' , False , True , 0.0 , '' , 1.0 ,  0}
print(len(a))  :  4 
print(type(a)) : < class ‘set’> 
# Find  outputs  (Home  work)
a =   [ ]
b =   ( )
c =   {}
d =   set()
print(type(a))
	< class  ‘list’>
print(type(b))
	<class  ‘tuple’>
print(type(c))
	<class  ‘dict>
print(type(d))
	< class  ‘set’>
print(a)  : empt list [ ]
print(b)  : empty tuple ( )
print(c)  : empty dict  { }
print(d)  : empty set { }
// because all of above are empty so no values are in above 
# Tricky  program
# add()  and  remove()  methods  (Home  work)
a = set()
a . add(25)
a . add(10.8)
a . add('Hyd')
a . add(True)
a . add(None)
a . add('Hyd')
a . add(1)
print(a)
	a={ 25 , 10.8 , ‘Hyd , True , None  } 
print(len(a))  : 5
a . remove(25)  
print(a)
	{ 10.8 , ‘Hyd’ , True , None , 1}
a . append(100)
	Error 
a . add(set())
	Error 
a . add(())
	Tuple can added into set  like   {  (  )  } 
a . add([])
print(a)
     Error // no list is added to set 
a . add({})   no dictionary  is alse added 

# How  to  print  set  in  two  differnet ways  (Home  work)
a = {25 , True , 'Hyd' , 10.8}
print('set  with  print  function')
	print(a)
print(How  to  print  set)
print('Iterate  thru  set  with  for  loop')
	for item in a:
                      print(item)
How  to  iterate  thru  set  with  for  loop
	True
	10.8
	Hyd
	25
