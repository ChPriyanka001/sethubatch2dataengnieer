#  Find  outputs  (Home  Work)
a = [25 , 10.8 , 'Hyd' , True , 3 + 4j , None , 'Hyd' , 25]
print(a)#list class object is printed
print(*a)#25  10.8  'Hyd'  True  3 + 4j  None 'Hyd'  25
print(type(a))#class list
print(id(a))#address of list object a
print(len(a))#number of elements in the list i.e 8
a[2] = 'Sec'
print(a)#[25 , 10.8 , 'Sec' , True , 3 + 4j , None , 'Hyd' , 25]
print(a[2 : 5])#['Sec' , True , 3 + 4j] i.e [2:5:1]

# append()  and  remove()  methods  (Home  work)
a = [ ]
print(a)#empty
a . append(25)#[25]
a . append(10.8)#[25 10.8]
a . append('Hyd')#[25 10.8 'Hyd']
a . append(True)#[25 10.8 'Hyd' True]
print(a)#[25 10.8 'Hyd' True]
a . remove('Hyd')
print(a)#[25 10.8  True]
a . remove('25')
print(a)#error '25' is not in list

#  Find  outputs  (Home  work)
a = [25 , 10.8 , 'Hyd']
print(a)#[25 10.8  'Hyd']
print(id(a))#address of list object a
print(a * 3)#[25 10.8  'Hyd' 25 10.8  'Hyd' 25 10.8  'Hyd']
print(a * 2)#[25 10.8  'Hyd' 25 10.8  'Hyd']
print(a * 1)#[25 10.8  'Hyd']
print(a * 0)#empty list
print(a * -1)#empty list
print(a * 4.0)#error float cannot be used
a = a * 3
print(a)#[25 10.8  'Hyd' 25 10.8  'Hyd' 25 10.8  'Hyd']
print(id(a))#address of list object a
a = [25]
print(a * a)#error list cannot be repeated by a non-integer

# list()  function  demo  program
a = list('Hyd')
print(a)#['Hyd']
print(type(a))#class list
print(len(a))#number of elements present in list a i.e 3
b = (10 , 20 , 15 , 18)
print(list(b))[10 20 15 18]
print(list(range(5)))#[0:5:1] i.e 0 1 2 3 4
print(list(25))#error 25 is not iterable

# Find  outputs
a = [ ]
print(type(a))#class list
print(a)#empty
print(len(a))#1
b = list()
print(b)#[]
print(len(b))#0

# Slice  demo  program (Home  work)
#        0     1        2      3       4      5       6      7
list = [25 , 10.8 , 3 + 4j , 'Hyd' , True , None , 10.8 , 'Hyd']
#       -8     -7    -6        -5     -4     -3     -2      -1
print(list[2 : 7])#3 + 4j , 'Hyd' , True , None , 10.8
print(list[ : : ])#[0:8:1]
print(list[:]) #  list[0 :  8 :  1]  --->  List  from  indexes  0  to  7  in  steps  of  1  i.e.  [25 , 10.8 , 3 + 4j , 'Hyd' , True , None , 10.8 , 'Hyd']
print(list[ : : -1])#[-1:-9:-1]
print(list[ : : 2])#[0:8:2]
print(list[1 : : 2])#[1:8:2]
print(list[ : : -2]) #  list[-1 :  -9 : -2]  --->  List  from  indexes   -1  to  -8  in  steps  of   -2   i.e.  ['Hyd' , None , 'Hyd' , 10.8]
print(list[-2 : : -2])#[-2:-9:-2]
print(list[1 : 4])#[1:4:1]
print(list[-4 : -1])#[0:-4:-1]
print(list[3 : -3])#[3:-3:1]
print(list[2 : -5])#[2:-9:-5]
print(list[-1:-5])#[-1:-5:-1]

#  Find  outputs  (Home  work)
#        0     1      2      3       4      5     6        7
list = [25 , 10.8 , 3+4j , 'Hyd' , True , None , 10.8 , 'Hyd']
x ,  y = list[3 : 5]
print('x : ' , x)#x:Hyd
print('y : ' , y)#y:True i.e [3:5:1]
for  x  in  list[2:7]:
	print(x)#[2:7:1]

#  Find  outputs  (Home  work)
#     0    1   2    3     4
a = [10 , 20 , 30 , 40 , 50]
print(a , id(a))#object a  and address of the list object a 
a[1 : 4] = [60 , 70]
print(a , id(a))#[10, 60, 70, 50] and  address of the list object a 
a[2: 4] = [100 , 200 ,  300]
print(a , id(a))#[10, 60, 100, 200, 300] and  address of the list object a 

#  Find  outputs  (Home  work)
a =  [25]
print(a[1])#is not present in list
print(a[1:])#[]

# Find  outputs  (Home  work)
a = (25)
b = 25,
c = 25
d = (25,)
print(type(a))#class int
print(type(b))#class tuple
print(type(c))#class int
print(type(d))#class tuple
print(a * 4)#100
print(b * 4)#(25, 25, 25, 25)
print(c * 4)#100
print(d * 4)#(25, 25, 25, 25)

# tuple()  function  demo  program  (Home  work)
a = tuple('Hyd')
print(a)#('H''y''d')
print(type(a))#class tuple
print(len(a))#3
b = [10 , 20 , 15 , 18]
print(tuple(b))#(10 , 20 , 15 , 18)
print(tuple(range(5)))#(0 1 2 3 4)
print(tuple(25))#error int object is not iterable

# Find  outputs (Home  work)
a = ()
print(type(a))#class tuple
print(a)#empty tuple
print(len(a))#0
b = tuple()
print(b)#empty tuple
print(len(b))#0

# Tricky program
# Find  outputs (Home  work)
a = (10 , 20 , 30)
print(a)#(10 , 20 , 30)
print(id(a))#address of tuple object a
a = a * 2
print(a)#(10 , 20 , 30, 10 , 20 , 30)
print(id(a))#address of tuple object a

#  set  object  demo  program  (Home  work)
a = {25 , 10.8 , 'Hyd' , True , 3+4j , None , 25 , 'Hyd'}
print(a)#print set object a
print(type(a))#class set
print(len(a))#6
print(a[2])#error unordered
print(a[1 : 4])#error unordered
a[2] = 'Sec'
print(a * 2)#error
print(a * a)#error

# Tricky  program
# Find  outputs (Home  work)
a = {1 , 'Hyd' , False , True , 0.0 , '' , 1.0 ,  0}
print(a)#print set object a
print(len(a))#4
print(type(a))#class set

#  set()  function demo  program
a = set('Rama rAo')
print(a)#{'R', 'o', 'r', 'm', ' ', 'a', 'A'}i.e unordered
print(len(a))#7
print(set([10 , 20 , 15 , 20]))#{10, 20, 15}
print(set((25 , 10.8 , 'Hyd' , 10.8)))#{25, 10.8, 'Hyd'}
print(set(range(10 , 20 , 3)))#{16, 10, 19, 13}
print(set(25))#error
print(set([25 , 10.8 , [] , 'Hyd']))#error


# Find  outputs  (Home  work)
a =   [ ]
b =   ( )
c =   {}
d =   set()
print(type(a))#class list
print(type(b))#class tuple
print(type(c))#class dict
print(type(d))#class set
print(a)#[]
print(b)#()
print(c)#{}
print(d)#set()

# Tricky  program
# add()  and  remove()  methods  (Home  work)
a = set()
a . add(25)
a . add(10.8)
a . add('Hyd')
a . add(True)
a . add(None)
a . add('Hyd')
a . add(1)
print(a)#{None, True, 'Hyd', 10.8, 25}
print(len(a))#5
a . remove(25)
print(a)#{None, True, 'Hyd', 10.8}
a . append(100)
a . add(set())
a . add(())
a . add([])
print(a)#error
a . add({})

a = {25 , True , 'Hyd' , 10.8}
for x in a
   print(a)
 


