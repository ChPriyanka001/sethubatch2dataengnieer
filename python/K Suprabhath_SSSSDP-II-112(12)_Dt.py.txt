#LEAP YEAR
x=int(input("enter the value:"))
if x%4==0 and x%100!=0:
  print("leap year")
elif x%400==0:
  print("leap year")  
else:
  print("not a leap year")  

#LARGEST
a=int(input())
b=int(input())
c=int(input())
if a>b and a>c:
  print ("largest")
elif b>c:
  print ("largest")
else:
  print("smallest")

  
#FARENHEIT AND CELCIUS
temp=int(input())
f=1.8 * temp + 32
c= (temp - 32) / 1.8
print(f)
print(c)

#QUARDRENTS
a=int(input())
b=int(input())
if a>0 and b>0:
  print("1st quard")
elif a<0 and b>0:
  print("2nd")
elif a<0 and b<0:
  print("3rd")
elif a==0 and b==0:
  print("origin")
else:
  print("4th")    

#TRIANGLE
import math

# Input sides of the triangle
a = float(input("Enter side a: "))
b = float(input("Enter side b: "))
c = float(input("Enter side c: "))

# Check if the three sides form a valid triangle
if (a + b > c) and (a + c > b) and (b + c > a):
    print("The sides form a valid triangle.")

    if a == b == c:
        print("It is an equilateral triangle.")
        area = (math.sqrt(3) / 4) * a ** 2
        print(f"Area = {area:.2f}")

    elif a == b or b == c or a == c:
        print("It is an isosceles triangle.")
        perimeter = a + b + c
        print(f"Perimeter = {perimeter:.2f}")

    else:
        print("It is a scalene triangle.")
        perimeter = a + b + c
        s = perimeter / 2
        area = math.sqrt(s * (s - a) * (s - b) * (s - c))
        print(f"Perimeter = {perimeter:.2f}")
        print(f"Area = {area:.2f}")

else:
    print("The sides do NOT form a triangle.")

#MAXIMUM,MINIMUM,MIDDLE
# Inputs
a = 10
b = 20
c = 7

# Step 1: Initialize max and min to 'a'
max_val = a
min_val = a

# Step 2: Find maximum
if b > max_val:
    max_val = b
if c > max_val:
    max_val = c

# Step 3: Find minimum
if b < min_val:
    min_val = b
if c < min_val:
    min_val = c

# Step 4: Find middle number by subtracting max and min from total
mid_val = (a + b + c) - (max_val + min_val)

# Output the results
print("Maximum:", max_val)
print("Minimum:", min_val)
print("Middle:", mid_val)

#QUADRATIC EQUATION
import math

# Input coefficients
a = float(input("Enter coefficient a (a ≠ 0): "))
b = float(input("Enter coefficient b: "))
c = float(input("Enter coefficient c: "))

if a == 0:
    print("This is not a quadratic equation because a = 0.")
else:
    # Step 1: Calculate discriminant
    disc = b ** 2 - 4 * a * c
    print(f"Discriminant = {disc}")

    # Step 2: Check the nature of roots
    if disc > 0:
        print("Roots are real and distinct.")
        root1 = (-b + math.sqrt(disc)) / (2 * a)
        root2 = (-b - math.sqrt(disc)) / (2 * a)
        print(f"Root1 = {root1}")
        print(f"Root2 = {root2}")

    elif disc == 0:
        print("Roots are real and same.")
        root = -b / (2 * a)
        print(f"Root = {root}")

    else:
        print("Roots are complex (imaginary).")
        real_part = -b / (2 * a)
        imag_part = math.sqrt(-disc) / (2 * a)
        print(f"Root1 = {real_part} + {imag_part}j")
        print(f"Root2 = {real_part} - {imag_part}j")

#CIRCLE
import math

# Input values
x = float(input("Enter x-coordinate of the point: "))
y = float(input("Enter y-coordinate of the point: "))
r = float(input("Enter radius of the circle: "))

# Step 1: Calculate distance from origin to (x, y)
distance = math.sqrt(x ** 2 + y ** 2)
print(f"Distance from origin = {distance}")

# Step 2: Compare distance with radius
if distance < r:
    print("The point lies INSIDE the circle.")
elif distance == r:
    print("The point lies ON the circle.")
else:
    print("The point lies OUTSIDE the circle.")

# Find  outputs  (Home  work)
m = 4
match  m:
	case  1:
		print('One')
	case  2:
		print('Two')
	case  3:
		print('Three')
print('Bye')#Bye

# Identify  Error
i = 2
match  i:
	case  1:
		print('One')
	case  _:
		print('None of   the  above')
	case  2:
		print('Two')
print('Bye')#it must be m not i

# Find  outputs  (Home  work)
m = 2
match  m:
	case  1:
		print('One')
	case  _:
		print('Hello')
	case  _:
		print('Bye')
print('End')#Hello
                                  End

#  Find  outputs  (Home  work)
m = 1
match  m:
	case  1:
		print('Hyd')
	case  1:
		print('Sec')
	case  1:
		print('Cyb')
print('Bye')#Hyd
                                 Bye

# Find  outputs  (Home  work)
ch = 'B'
match  ch:
	case   'A':
		print('Apple')
	case  'B':
		print('Book')
	case  'C':
		print('Cafe')
	case  _:
		print('None of  the  above')
print('Bye')#Book
                                 None of the above
                                  Bye
#''
1) What  are  the  outputs  if  input  is  -6 ? --->Hyd,Sec,Cyb
2) What  are  the  outputs  if  input  is  15  ?  --->One,Two,Three
3) What  are  the  outputs  if  input  is  10.8  ?  --->India,China,Usa
4) What  are  the  outputs  if  input  is  0  ?  --->Hyd,Sec,Cyb
5) What  are  the  outputs  if  input  is  -10  ?  --->One,Two,Three
6) What  are  the  outputs  if  input  is  7  ?  --->Hyd,Sec,Cyb
'''
x = eval(input('Enter any  number :  '))
match  x:
	case  7 |  -6  |  0:
		print('Hyd')
		print('Sec')
		print('Cyb')
	case  -10 | 15:
		print('One')
		print('Two')
		print('Three')
	case  _:
		print('India')
		print('China')
		print('Usa')
# End  of  match
print('Bye')

1) What  is  the  output  when  input  is  (-10 , -20) ?  --->quardrant
2) What  is  the  output  when  input  is  (10 , 0) ?  --->x-axis
3) What  is  the  output  when  input  is  (0 , -20) ?  --->y-axis
4) What  is  the  output  when  input  is  (0 , 0) ?  --->origin
5) What  is  the  output  when  input  is  (10 , 20 , 30) ?  --->not a point
6) What  is  the  output  when  input  is  [10 , 20]  ?  --->not a point
7) What  is  the  output  when  input  is  [0 , -25]  ?  --->not a point
8) What  is  the  output  when  input  is  ()  ?  --->not a point
9) What  is  the  output  when  input  is  {10 , 20} ?  --->not a point
10) What  is  the  output  when  input  is  (25,) ?  --->not a point
11) What  is  the  output  when  input  is  {10 : 20} ?  --->not a point
'''
tpl = eval(input('Enter  any  point  in  the  form  of  (x , y) :  '))
match  tpl:
	case  (0 , 0):
		print('Origin')
	case   (0 , y):
		print('y - axis')
	case   (x , 0):
		print('x - axis')
	case   (x , y):
		print('Quadrant')
	case  _:
		print('Not  a  point')

#UNITS:
#units = int(input("Enter units: "))
cost = 0

match units // 100:
    case 0:  # 0–99 units
        cost = units * 3.00

    case 1:  # 100–199 units
        cost = 100 * 3.00 + (units - 100) * 3.50

    case 2 | 3:  # 200–399 units
        cost = 100 * 3.00 + 100 * 3.50 + (units - 200) * 4.00

    case 4 | 5 | 6:  # 400–699 units
        cost = 100 * 3.00 + 100 * 3.50 + 200 * 4.00 + (units - 400) * 4.50

    case _:  # 700 units and above
        cost = (
            100 * 3.00 +
            100 * 3.50 +
            200 * 4.00 +
            300 * 4.50 +
            (units - 700) * 5.00
        )

print(f"Bill Amount = Rs. {cost:.2f}")

#FIBANOCC SERIES
# Input: print Fibonacci series up to this value
x = int(input("Enter the upper limit (x): "))

# First two terms
a, b = 0, 1

# Print the first term if x ≥ 0
if a <= x:
    print(a, end="")

# Use a while loop to generate and print subsequent terms
while b <= x:
    print(", ", b, end="", sep="")
    a, b = b, a + b

print()
#  Find  outputs
while  True:
	print('Hello')
print('Bye')#Hello
             Bye
#  Find  outputs
while  False:
	print('Hello')
print('Bye')#Bye

# Find  outputs  (Home  work)
How  to  print  each  element  of  list  [10 , 20 , 15 , 18]  with  for  loop
print()	#for x  in  sequence
         print(x)
How  to  print  each  character  of   string  'Hyd'  with  for  loop
print()#for i in range(len(sequence))
        print(a[i])
How  to  print  each  element  of   range(5)  with  for  loop
#01234 elements are printed in a range of length of sequence 5

# Find  outputs  (Home  work)
for  x  in  {10 : 20 , 30 : 40 , 50 : 60} . keys():
	print(x)
print()#10 30 50
for  x  in  {10 : 20 , 30 : 40 , 50 : 60} . values():
	print(x)
print()#20 40 60
for  x  in  {10 : 20 , 30 : 40 , 50 : 60} . items():
	print(x)
print()#(10,20)(30,40)(50,60)
for  x  in  {10 : 20 , 30 : 40 , 50 : 60}:
	print(x)#10 30 50

# Find outputs  (Home  work)
a = {10 : 20 , 30 : 40 , 50 : 60}
for  x , y  in   a . items():
	print(x , y , sep = '...')#(10...20)(30...40)(50...60)
for  x ,  y  in   a:
	print(x , y)#error
for  x , y  in  {10 : 20 , 30 : 40 , 50 : 60}:
	print(x , y , sep = '...')#error

# Identify  error  (Home  work)
for  x  in   123:
        print(x)#it must be in  str
# Find  outputs  (Home  work)
for  x   in   ():
        print(x)#empty
for  x   in  []:
        print(x)#empty
for  x   in   {}:
        print(x)#empty
for  x   in   set():
        print(x)#empty
for  x   in   '':
        print(x)#empty
for  x  in  range(10 , 10):
	print(x)#empty
for  x  in   range():
	print(x)#error
for  x  in   (25):
	print(x)#error

#  Nested  Loop  demo  program
for  i  in  range(1 , 4):
	for  j  in  range(1 , 5):
			print(i ,  j)  #
	print('Hello')
print('Bye')
#1 1
1 2
1 3
1 4
Hello
2 1
2 2
2 3
2 4
Hello
3 1
3 2
3 3
3 4
Hello
Bye

#a = [25, 10.8, 'Hyd', True]
print('Indexed based for loop')
for i in range(len(a)):
    print(i, a[i])

#a = [25, 10.8, 'Hyd', True]

print('Indexed for loop')
for i in range(len(a)-1, -1, -1):
    print(a[i])

print('For each loop')
for x in reversed(a):
    print(x)


#a = eval(input('Enter 1st list  : '))
b = eval(input('Enter 2nd list  : '))
c = []

# Using indexed-based for loop
print('Using indexed-based for loop')
for i in range(len(a)):
    c.append(a[i] + b[i])
print('3rd list :', c)

#a = [25, 10.8, 'Hyd', True, 3+4j, None, 'Sec']

print('Indexed for loop')
for i in range(2, 5):
    print(a[i])

print('For each loop without second variable and slice')
for t in enumerate(a):
    if 2 <= t[0] <= 4:
        print(t[1])

#  Tricky  program
#  Find  outputs  (Home  work)
a = [10 , 20 , 15 , 18]
for  i  in  range(len(a)):
	a[i] +=  1
print('a :  ' , a)
b = [10 , 20 , 15 , 18]
for  x  in   b:
	x += 1
print('b :  ',b)
#a :   [11, 21, 16, 19]
 b :   [10, 20, 15, 18]